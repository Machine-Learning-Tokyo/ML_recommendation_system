#!/usr/bin/env python
from mlsearch.api_requester import APIRequest
from mlsearch import helper as hp
import argparse
import sys
import pprint

ap = argparse.ArgumentParser()
ap.add_argument('-q', '--query', required=True, help="Keyword for searching.")
ap.add_argument('-i', '--init_idx', required=True, help="Initial index for pagination.")
ap.add_argument('-c', '--count', required=True, help="Total number of results to be fetched.")
ap.add_argument('-s', '--source', required=True, help="Source API to be looking for.")
ap.add_argument('-u', '--pwc_user', required=False, help="Paper with code repository user name.")
ap.add_argument('-p', '--pwc_password', required=False, help="Paper with code repository password.")
ap.add_argument('-t', '--github_acc_token', required=False, help="Github access token.")
args = vars(ap.parse_args())

def main(event):
    try:
        param_names = ['query', 'init_idx', 'count', 'source']
        response_msg = hp.response('success', 200)
        
        if hp.is_valid_parameters(event, param_names):
            params = hp.parse_parameters(event)
            if params.values():
                api_request = APIRequest(params['source'], params['query'], params['init_idx'], params['count'])
                if 'pwc_user'in event and 'pwc_password' in event:
                    api_request.pwc_auth_info = (event['pwc_user'], event['pwc_password'])
                if 'github_acc_token' in event:
                    api_request.github_acc_token = event['github_acc_token']
                data = api_request.fetch_data()
                response_msg = hp.response(data.get('content',''), data.get('response_code'))
                
                return response_msg

        response_msg = hp.response('Invalid parameters.', 400)
        return response_msg

    except (ValueError, TypeError):
        response_msg = hp.response('Invalid parameters.', 400)

    except Exception as ex:
        response_msg = hp.response(str(ex), 500)
        return response_msg

if __name__ == "__main__":
    event = {
        'query': args['query'],
        'init_idx': args['init_idx'],
        'count': args['count'],
        'source': args['source']
    }

    if args['pwc_user']:
        event['pwc_user'] = args['pwc_user']
    if args['pwc_password']:
        event['pwc_password'] = args['pwc_password']
    if args['github_acc_token']:
        event['github_acc_token'] = args['github_acc_token']

    result = main(event)
    pp = pprint.PrettyPrinter(indent=2)
    pp.pprint(result)